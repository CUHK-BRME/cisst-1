/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-    */
/* ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab: */

/*
  $Id$

  Author(s):	Anton Deguet
  Created on: 2004-02-18

  (C) Copyright 2004-2012 Johns Hopkins University (JHU), All Rights
  Reserved.

--- begin cisst license - do not edit ---

This software is provided "as is" under an open source license, with
no warranty.  The complete license can be found in license.txt and
http://www.cisst.org/cisst/license.txt.

--- end cisst license ---

*/

#pragma once

#ifndef _cisstConfig_h
#define _cisstConfig_h

// cisst version
#define CISST_VERSION_MAJOR ${CISST_VERSION_MAJOR}
#define CISST_VERSION_MINOR ${CISST_VERSION_MINOR}
#define CISST_VERSION "${CISST_VERSION_MAJOR}.${CISST_VERSION_MINOR}"

// Deprecated paths/macros
#define CISST_SOURCE_ROOT                       CISST_SOURCE_ROOT_is_deprecated_use_CISST_ROOT_and_cmnPath_instead__See_https_trac_dot_lcsr_dot_jhu_dot_edu_slash_cisst_slash_wiki_slash_UsingCMake
#define CISST_BUILD_ROOT                         CISST_BUILD_ROOT_is_deprecated_use_CISST_ROOT_and_cmnPath_instead__See_https_trac_dot_lcsr_dot_jhu_dot_edu_slash_cisst_slash_wiki_slash_UsingCMake
#define CISST_BUILD_LINK_DIRECTORIES CISST_BUILD_LINK_DIRECTORIES_is_deprecated_use_CISST_ROOT_and_cmnPath_instead__See_https_trac_dot_lcsr_dot_jhu_dot_edu_slash_cisst_slash_wiki_slash_UsingCMake

// Was cisst compiled as shared libraries or static
#cmakedefine01 CISST_BUILD_SHARED_LIBS

// For MSVC, CMake generator assumes either 32 or 64 bits compiler
#cmakedefine01 CISST_CMAKE_COMPILER_IS_MSVC_64

// To allow overloading of functions for size_t
#cmakedefine01 CISST_SIZE_T_NATIVE

// For CMN_LOG macro
#cmakedefine01 CISST_OSTREAM_CAN_CAST_TO_VOID_PTR

// Do we have isfinite global function
#cmakedefine01 CISST_HAS_ISFINITE

// RTAI Realtime extension for Linux
#cmakedefine01 CISST_HAS_LINUX_RTAI

// Xenomai Realtime extension for Linux
#cmakedefine01 CISST_HAS_LINUX_XENOMAI

// Using XML or not
#cmakedefine01 CISST_HAS_XML

// Using IRE (and Swig/Python) or not
#cmakedefine01 CISST_HAS_IRE

// Using FLTK or not
#cmakedefine01 CISST_HAS_FLTK

// Using Qt or not
#cmakedefine01 CISST_HAS_QT

// Using OpenGL or not
#cmakedefine01 CISST_HAS_OPENGL

// Using IOS or not
#cmakedefine01 CISST_HAS_IOS

// Using JSonCpp, compiled along cisst
#cmakedefine01 CISST_HAS_JSON

#endif // _cisstConfig_h
