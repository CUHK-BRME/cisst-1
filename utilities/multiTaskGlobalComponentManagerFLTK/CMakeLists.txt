#
# $Id$
#
# (C) Copyright 2010-2011 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
#
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
#
# --- end cisst license ---

# name of project and executable
project (multiTaskGlobalComponentManagerFLTK)

# add include paths
include_directories (${multiTaskGlobalComponentManagerFLTK_SOURCE_DIR})

# set all libraries needed
set (CISST_LIBRARIES_NEEDED cisstCommon cisstOSAbstraction cisstMultiTask)

# set include and link directories for cisst
cisst_set_directories (${CISST_LIBRARIES_NEEDED})

# magic CMake command, generate .cxx and .h from .fl files
# then compile them and link them with the executable
fltk_wrap_ui (multiTaskGlobalComponentManagerFLTK GlobalComponentManagerUI.fl)

# name the main executable and specifies with source files to use
add_executable (multiTaskGlobalComponentManagerFLTK
                # code files to compile
                GCMUITask.cpp
                main.cpp
                # header files are provided for information
                GCMUITask.h
                # files generated by fluid
                ${multiTaskGlobalComponentManagerFLTK_FLTK_UI_SRCS}
                )

# link with the cisst libraries
cisst_target_link_libraries (multiTaskGlobalComponentManagerFLTK ${CISST_LIBRARIES_NEEDED})

if (BUILD_LIBS_cisstParameterTypes)
  # set all libraries needed
  set (CISST_LIBRARIES_NEEDED ${CISST_LIBRARIES_NEEDED} cisstParameterTypes)

  # set include and link directories for cisst
  cisst_set_directories (${CISST_LIBRARIES_NEEDED})

  # name the main executable and specifies with source files to use
  add_executable (TestSignalGenerator
                  # code files to compile
                  SignalGeneratorTask.cpp
                  SignalGeneratorMain.cpp
                  # header files are provided for information
                  SignalGeneratorTask.h
                  )

  # link with the cisst libraries
  cisst_target_link_libraries (TestSignalGenerator ${CISST_LIBRARIES_NEEDED})
endif (BUILD_LIBS_cisstParameterTypes)
