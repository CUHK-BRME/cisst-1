#
# $Id$
#
# (C) Copyright 2005-2009 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# name of project
PROJECT(multiTaskTestComplexConnections)

# Set include/link directories
cisst_set_directories (cisstCommon cisstOSAbstraction cisstMultiTask)

# add include paths
INCLUDE_DIRECTORIES(${multiTaskTestComplexConnections_SOURCE_DIR})

# CMake command, generate .cxx and .h from .fl files
FLTK_WRAP_UI(multiTaskTestComplexConnectionsServer C3UI.fl serverUI.fl)

# name the main executable and specifies with source files to use
ADD_EXECUTABLE(multiTaskTestComplexConnectionsServer
               # code files to compile
               fltkMutex.cpp
               C2ServerTask.cpp
               C3Task.cpp
               P2main.cpp
               # header files are provided for information
               fltkMutex.h
               C2ServerTask.h
               C3Task.h
               # files generated by fluid
               ${multiTaskTestComplexConnectionsServer_FLTK_UI_SRCS}
               )

# link with the cisst libraries
cisst_target_link_libraries(multiTaskTestComplexConnectionsServer cisstCommon cisstOSAbstraction cisstMultiTask)


# CMake command, generate .cxx and .h from .fl files
FLTK_WRAP_UI(multiTaskTestComplexConnectionsClient C1UI.fl C2ClientUI.fl)

# name the main executable and specifies with source files to use
ADD_EXECUTABLE(multiTaskTestComplexConnectionsClient
               # code files to compile
               fltkMutex.cpp
               C1Task.cpp
               C2ClientTask.cpp
               P1main.cpp
               # header files are provided for information
               fltkMutex.h
               C1Task.h
               C2ClientTask.h
               # files generated by fluid
               ${multiTaskTestComplexConnectionsClient_FLTK_UI_SRCS}
               )

# link with the cisst libraries
cisst_target_link_libraries(multiTaskTestComplexConnectionsClient cisstCommon cisstOSAbstraction cisstMultiTask)
