#
# $Id$
#

# (C) Copyright 2010 Johns Hopkins University (JHU), All Rights
# Reserved.

# --- begin cisst license - do not edit ---
#
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
#
# --- end cisst license ---

# CMakeLists.txt for cisstMultiTask wrapping tests

# Keep a list all tests for ctest/Dart
set (DART_TEST_FILE ${CMAKE_CURRENT_BINARY_DIR}/DartTestfile-cisstMultiTaskPython.txt)
set (DART_TEST_FILE_AUTO ${CMAKE_CURRENT_BINARY_DIR}/DartTestfile-cisstMultiTaskPython-auto.txt)
file (WRITE ${DART_TEST_FILE} "# File generated by CMake, do not modify\n")

# Allow generated c++ code to find header files
include_directories (${CMAKE_CURRENT_SOURCE_DIR})
include_directories (${CISST_SWIG_INCLUDE_DIR})

# We are using C++ code that needs to be wrapped
add_library (cisstMultiTaskPythonTest SHARED
             mtsPeriodicTaskTest.h mtsPeriodicTaskTest.cpp)
cisst_target_link_libraries (cisstMultiTaskPythonTest  cisstCommon cisstVector cisstOSAbstraction cisstMultiTask)

# Python wrappers
set (PROXY_TESTS cisstMultiTaskPythonTest)
foreach (proxyTest ${PROXY_TESTS})
  set (interface ${CMAKE_CURRENT_SOURCE_DIR}/${proxyTest}.i)
  set (module ${proxyTest}Python)
  set (TEST_PROGRAMS ${TEST_PROGRAMS} ${proxyTest}.py)

  set_source_files_properties (${interface} PROPERTIES CPLUSPLUS ON)
  set_source_files_properties (${interface}
                               PROPERTIES SWIG_FLAGS "-v;-modern;-fcompact;-fvirtual")
  swig_add_module (${module} python ${interface})
  if (WIN32)
    set_target_properties(_${module} PROPERTIES SUFFIX .pyd)
  endif(WIN32)
  swig_link_libraries(${module}
	              cisstMultiTaskPythonTest
                      cisstMultiTask cisstVector cisstCommon
                      debug ${PYTHON_DEBUG_LIBRARIES}
                      optimized ${PYTHON_LIBRARIES})
  # Copy the .py file generated to wherever the libraries are
  add_custom_command (TARGET _${module}
                      POST_BUILD
                      COMMAND ${CMAKE_COMMAND}
                      ARGS -E copy
                              ${CMAKE_CURRENT_BINARY_DIR}/${module}.py
                              ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/${module}.py)
  # Create a cisstMultiTask.py as CMake assumes one should be created
  # This is a bug that should be fixed in future releases of CMake.
  add_custom_command (TARGET _${module}
                      POST_BUILD
                      COMMAND ${CMAKE_COMMAND}
                      ARGS -E copy
                              ${CMAKE_CURRENT_BINARY_DIR}/${module}.py
                              ${CMAKE_CURRENT_BINARY_DIR}/${proxyTest}.py)
endforeach (proxyTest)

# Create the scripts from .in
set (LIB cisstMultiTask)
if (CMAKE_CONFIGURATION_TYPES)
  foreach (config ${CMAKE_CONFIGURATION_TYPES})
    configure_file (${cisstWrappingTests_SOURCE_DIR}/cisstTestMain.py.in
                    ${EXECUTABLE_OUTPUT_PATH}/${config}/cisstMultiTaskTests.py
                    IMMEDIATE @ONLY@)
  endforeach (config)
else (CMAKE_CONFIGURATION_TYPES)
  configure_file (${cisstWrappingTests_SOURCE_DIR}/cisstTestMain.py.in
                  ${EXECUTABLE_OUTPUT_PATH}/cisstMultiTaskTests.py
                  IMMEDIATE @ONLY@)
endif (CMAKE_CONFIGURATION_TYPES)

# Run the script to generate the list of tests automatically
add_custom_target (cisstMultiTask_CREATE_PYTHON_TESTS_LIST ALL
                   COMMAND ${PYTHON_EXECUTABLE} ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/cisstMultiTaskTests.py -d ${PYTHON_EXECUTABLE} > ${DART_TEST_FILE_AUTO}
                   SOURCES ${TEST_PROGRAMS})

add_dependencies (cisstMultiTask_CREATE_PYTHON_TESTS_LIST
                  cisstCommon
                  cisstVector
                  cisstMultiTask
                  _cisstCommonPython
                  _cisstVectorPython
                  _cisstOSAbstractionPython
                  _cisstMultiTaskPython
                  cisstMultiTaskPythonTest
                  _cisstMultiTaskPythonTestPython)

file (APPEND ${DART_TEST_FILE} "include (\"${DART_TEST_FILE_AUTO}\")\n")

# Add all the test lists
set_directory_properties (PROPERTIES TEST_INCLUDE_FILE
                          ${DART_TEST_FILE})
