#
# $Id$
#
# (C) Copyright 2005-2009 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# CMake command, generate .cxx and .h from .fl files
FLTK_WRAP_UI(cisstMultiTaskCommandsAndEventsFLTK clientUI.fl serverUI.fl)

# name the main executable and specifies with source files to use
ADD_EXECUTABLE(cisstMultiTaskCommandsAndEventsFLTK
               # code files to compile
               fltkMutex.cpp
               clientTask.cpp
               serverTask.cpp
               main.cpp
               # header files are provided for information
               fltkMutex.h
               clientTask.h
               serverTask.h
               # files generated by fluid
               ${cisstMultiTaskCommandsAndEventsFLTK_FLTK_UI_SRCS}
               )

# this program 
TARGET_LINK_LIBRARIES(cisstMultiTaskCommandsAndEventsFLTK ${FLTK_LIBRARIES})

# link with the cisst libraries
CISST_REQUIRES(cisstMultiTaskCommandsAndEventsFLTK "cisstCommon;cisstOSAbstraction;cisstMultiTask")


# compile network version if ICE is available
if (CISST_MTS_HAS_ICE)

  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(cisstMultiTaskCommandsAndEventsFLTKServer serverUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(cisstMultiTaskCommandsAndEventsFLTKServer
                 # code files to compile
                 fltkMutex.cpp
                 serverTask.cpp
                 serverMain.cpp
                 # header files are provided for information
                 fltkMutex.h
                 serverTask.h
                 # files generated by fluid
                 ${cisstMultiTaskCommandsAndEventsFLTKServer_FLTK_UI_SRCS}
                 )
  # this program 
  TARGET_LINK_LIBRARIES(cisstMultiTaskCommandsAndEventsFLTKServer ${FLTK_LIBRARIES})

  # link with the cisst libraries
  CISST_REQUIRES(cisstMultiTaskCommandsAndEventsFLTKServer "cisstCommon;cisstOSAbstraction;cisstMultiTask")


  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(cisstMultiTaskCommandsAndEventsFLTKClient clientUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(cisstMultiTaskCommandsAndEventsFLTKClient
                 # code files to compile
                 fltkMutex.cpp
                 clientTask.cpp
                 clientMain.cpp
                 # header files are provided for information
                 fltkMutex.h
                 clientTask.h
                 # files generated by fluid
                 ${cisstMultiTaskCommandsAndEventsFLTKClient_FLTK_UI_SRCS}
                 )

  # this program 
  TARGET_LINK_LIBRARIES(cisstMultiTaskCommandsAndEventsFLTKClient ${FLTK_LIBRARIES})

  # link with the cisst libraries
  CISST_REQUIRES(cisstMultiTaskCommandsAndEventsFLTKClient "cisstCommon;cisstOSAbstraction;cisstMultiTask")

endif (CISST_MTS_HAS_ICE)
