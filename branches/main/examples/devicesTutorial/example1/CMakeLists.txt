#
# $Id$
#
# (C) Copyright 2005-2008 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# name of project and executable
PROJECT(devicesTutorialExample1)

if (CISST_DEV_HAS_SENSABLEHD OR CISST_DEV_HAS_NOVINTHDL)
  if (CISST_DEV_HAS_SENSABLEHD)
    find_package(Sensable REQUIRED)
    include_directories(${SENSABLE_INCLUDE_DIR})
  endif (CISST_DEV_HAS_SENSABLEHD)
  if (CISST_DEV_HAS_NOVINTHDL)
    find_package(NovintHDL REQUIRED)
    include_directories(${NOVINT_INCLUDE_DIR})
  endif (CISST_DEV_HAS_NOVINTHDL)
  
  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(devicesTutorialExample1 displayUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(devicesTutorialExample1
                 # code files to compile
                 displayTask.cpp
                 main.cpp
                 # header files are provided for information
                 displayTask.h
                 # files generated by fluid
                 ${devicesTutorialExample1_FLTK_UI_SRCS}
                 )

  if (CISST_DEV_HAS_SENSABLEHD)
    target_link_libraries(devicesTutorialExample1
                          ${SENSABLE_LIBRARIES})
  endif (CISST_DEV_HAS_SENSABLEHD)
  if (CISST_DEV_HAS_NOVINTHDL)
    target_link_libraries(devicesTutorialExample1
                          ${NOVINT_LIBRARIES})
  endif (CISST_DEV_HAS_NOVINTHDL)

  # link with the cisst libraries
  CISST_REQUIRES("devicesTutorialExample1" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes;cisstDevices")

endif (CISST_DEV_HAS_SENSABLEHD OR CISST_DEV_HAS_NOVINTHDL)


if (CISST_MTS_HAS_ICE)
  if (CISST_DEV_HAS_SENSABLEHD)
    find_package(Sensable REQUIRED)
    include_directories(${SENSABLE_INCLUDE_DIR})
    
    # CMake command, generate .cxx and .h from .fl files
    FLTK_WRAP_UI(devicesTutorialExample1Client displayUI.fl)

    # name the main executable and specifies with source files to use
    ADD_EXECUTABLE(devicesTutorialExample1Client
                   # code files to compile
                   displayTask.cpp
                   clientMain.cpp
                   # header files are provided for information
                   displayTask.h
                   # files generated by fluid
                   ${devicesTutorialExample1Client_FLTK_UI_SRCS}
                   )
    
    target_link_libraries(devicesTutorialExample1Client
                          ${SENSABLE_LIBRARIES}
                          )
    # link with the cisst libraries
    CISST_REQUIRES("devicesTutorialExample1Client" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes")

    # name the main executable and specifies with source files to use
    ADD_EXECUTABLE(devicesTutorialExample1Server
                   # code files to compile
                   serverMain.cpp
                  )

    target_link_libraries(devicesTutorialExample1Server
                          ${SENSABLE_LIBRARIES}
                          )

    # link with the cisst libraries
    CISST_REQUIRES("devicesTutorialExample1Server" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes;cisstDevices")

  endif (CISST_DEV_HAS_SENSABLEHD)
endif (CISST_MTS_HAS_ICE)
