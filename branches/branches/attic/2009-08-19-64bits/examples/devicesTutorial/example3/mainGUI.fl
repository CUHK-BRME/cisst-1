# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.h} 
code_name {.cxx}
class mainGUI {open
} {
  Function {mainGUI()} {open
  } {
    Fl_Window DisplayWindow {
      callback CloseWindow_CB open
      xywh {715 280 502 346} type Double align 0 visible
    } {
      Fl_Return_Button BtnQuit {
        label Quit
        callback {QuitClicked = true;}
        xywh {10 280 70 60} box PLASTIC_UP_BOX labelsize 12
      }
      Fl_Tabs {} {open
        xywh {10 10 480 260} box PLASTIC_THIN_UP_BOX
      } {
        Fl_Group {} {
          label {Sensable HD Teleoperation} open
          xywh {10 35 480 235} labelsize 12
        } {
          Fl_Value_Slider ScaleFactor {
            label {Scale Factor}
            xywh {10 55 245 25} type Horizontal box PLASTIC_DOWN_BOX labelsize 12 align 5 maximum 0.5 value 0.15 textfont 4 textsize 11
          }
          Fl_Value_Slider ForceLimit {
            label {Force Limit}
            xywh {10 100 245 25} type Horizontal box PLASTIC_DOWN_BOX labelsize 12 align 5 maximum 50 step 0.5 value 40 textfont 4 textsize 11
          }
          Fl_Value_Output ScaleFactorVal {
            label {Scale Factor Value}
            xywh {325 55 110 25} labelsize 12 align 1 textfont 4 textsize 11
          }
          Fl_Value_Output ForceLimitVal {
            label {Force Limit Value}
            xywh {325 100 110 25} labelsize 12 align 1 textfont 4 textsize 11
          }
          Fl_Value_Slider ForceCoefficient {
            label {Master Device Force Coefficient}
            xywh {10 145 245 25} type Horizontal box PLASTIC_DOWN_BOX labelsize 12 align 5 maximum 2 step 0.1 value 1 textfont 4 textsize 11
          }
          Fl_Value_Output ForceCoefficientVal {
            label {Coefficient Value}
            xywh {325 145 110 25} labelsize 12 align 1 textfont 4 textsize 11
          }
          Fl_Light_Button ClutchMaster {
            label {Clutch Master}
            xywh {360 200 110 20} labelsize 13
          }
          Fl_Output CurrentForceMode {
            label {Current Force Mode}
            xywh {120 201 135 24} labelsize 12 textsize 12
          }
          Fl_Button RatchetOn {
            label {Ratchet Effect}
            xywh {15 240 95 20} labelsize 12
          }
          Fl_Button CappingOn {
            label {Cap Forces}
            xywh {130 240 95 20} labelsize 12
          }
          Fl_Button RawOn {
            label {Raw Force} selected
            xywh {240 240 95 20} labelsize 12
          }
          Fl_Light_Button ClutchSlave {
            label {Clutch Slave}
            xywh {360 230 110 20} labelsize 13
          }
        }
      }
    }
    code {// constructor
QuitClicked = false;} {}
  }
  Function {CloseWindow_CB(Fl_Widget*, void *caller)} {return_type {static void}
  } {
    code {// a little hack in order to not use static members
// the window will send the this pointer (this class) as the caller
// make sure this callback is added to the window itself

 if (Fl::event()==FL_SHORTCUT && Fl::event_key()==FL_Escape)
    return; // ignore Escape key

((mainGUI*)caller)->QuitClicked = true;} {}
  }
  decl {bool QuitClicked;} {public
  }
} 
