#
# $Id$
#
# (C) Copyright 2005-2008 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# name of project and executable
PROJECT(devicesTutorialExample1)

# use CMake provided script to locate FLTK
FIND_PACKAGE(FLTK REQUIRED)

# add include paths
INCLUDE_DIRECTORIES(${devicesTutorialExample1_SOURCE_DIR}
                    ${FLTK_INCLUDE_DIR})

					
if (CISST_DEV_HAS_SENSABLEHD)
  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(devicesTutorialExample1 displayUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(devicesTutorialExample1
                 # code files to compile
                 displayTask.cpp
                 main.cpp
                 # header files are provided for information
                 displayTask.h
                 # files generated by fluid
	             ${devicesTutorialExample1_FLTK_UI_SRCS}
	             )

  # this program 
  TARGET_LINK_LIBRARIES(devicesTutorialExample1 ${FLTK_LIBRARIES})

  # link with the cisst libraries
  CISST_REQUIRES("devicesTutorialExample1" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes;cisstDevices")
endif (CISST_DEV_HAS_SENSABLEHD)


if (CISST_MTS_HAS_ICE)
  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(devicesTutorialExample1Client displayUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(devicesTutorialExample1Client
                 # code files to compile
                 displayTask.cpp
                 clientMain.cpp
                 # header files are provided for information
                 displayTask.h
                 # files generated by fluid
			     ${devicesTutorialExample1Client_FLTK_UI_SRCS}
			    )

  # this program 
  TARGET_LINK_LIBRARIES(devicesTutorialExample1Client ${FLTK_LIBRARIES})

  # link with the cisst libraries
  CISST_REQUIRES("devicesTutorialExample1Client" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes")
endif (CISST_MTS_HAS_ICE)


if (CISST_DEV_HAS_SENSABLEHD AND CISST_MTS_HAS_ICE)
  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(devicesTutorialExample1Server
                 # code files to compile
                 serverMain.cpp
                 )

  # link with the cisst libraries
  CISST_REQUIRES("devicesTutorialExample1Server" "cisstCommon;cisstVector;cisstOSAbstraction;cisstMultiTask;cisstParameterTypes;cisstDevices")
endif (CISST_DEV_HAS_SENSABLEHD AND CISST_MTS_HAS_ICE)
