/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-    */
/* ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab: */
/* $Id: oscilloscopeTask.h 564 2009-07-18 04:09:18Z adeguet1 $ */

#ifndef _oscilloscopeTask_h
#define _oscilloscopeTask_h

#include <cisstMultiTask.h>
#include "OscilloscopeUI.h"
#include <time.h>

class oscilloscopeTask: public mtsTaskPeriodic {
    // set log level to "Run Error"
    CMN_DECLARE_SERVICES(CMN_NO_DYNAMIC_CREATION, CMN_LOG_LOD_RUN_ERROR);

protected:
    // local copy of data used in commands
    mtsDouble Data;
    mtsDouble AmplitudeData;

    struct {
    // functions which will be bound to commands
    mtsFunctionRead GetData;
    mtsFunctionWrite SetAmplitude;
    } Generator;

    // user interface generated by FTLK/fluid
    OscilloscopeUI UI;
    // User interface controller
    mtsCollectorGUI * CollectorGUI;
    // timer to control refresh rate
    clock_t LastUpdateTime;

public:
    // see sineTask.h documentation
    oscilloscopeTask(const std::string & taskName, double period);
    ~oscilloscopeTask();

    void Configure(const std::string & CMN_UNUSED(filename) = "");
    void Startup(void);
    void Run(void);
    void Cleanup(void) {};
};

CMN_DECLARE_SERVICES_INSTANTIATION(oscilloscopeTask);

#endif // _oscilloscopeTask_h

/*
  Author(s):  Min Yang Jung
  Created on: 2009-07-27

  (C) Copyright 2009 Johns Hopkins University (JHU), All Rights Reserved.

--- begin cisst license - do not edit ---

This software is provided "as is" under an open source license, with
no warranty.  The complete license can be found in license.txt and
http://www.cisst.org/cisst/license.txt.

--- end cisst license ---

*/
