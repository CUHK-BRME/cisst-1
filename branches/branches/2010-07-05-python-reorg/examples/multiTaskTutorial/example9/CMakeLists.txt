#
# $Id$
#
# (C) Copyright 2005-2009 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# name of project
PROJECT(multiTaskTutorialExample9)

# add include paths
INCLUDE_DIRECTORIES(${multiTaskTutorialExample9_SOURCE_DIR})

# CMake command, generate .cxx and .h from .fl files
FLTK_WRAP_UI(multiTaskTutorialExample9Local clientUI.fl serverUI.fl)

# name the main executable and specifies with source files to use
ADD_EXECUTABLE(multiTaskTutorialExample9Local
               # code files to compile
               fltkMutex.cpp
               clientTask.cpp
               serverTask.cpp
               localMain.cpp
               # header files are provided for information
               fltkMutex.h
               clientTask.h
               serverTask.h
               # files generated by fluid
               ${multiTaskTutorialExample9Local_FLTK_UI_SRCS}
	       )

# link with the cisst libraries
CISST_REQUIRES("multiTaskTutorialExample9Local" "cisstCommon;cisstOSAbstraction;cisstMultiTask")


# compile network version if ICE is available
if (CISST_MTS_HAS_ICE)

  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(multiTaskTutorialExample9Server serverUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(multiTaskTutorialExample9Server
                 # code files to compile
                 fltkMutex.cpp
                 serverTask.cpp
                 serverMain.cpp
                 # header files are provided for information
                 fltkMutex.h
                 serverTask.h
                 # files generated by fluid
                 ${multiTaskTutorialExample9Server_FLTK_UI_SRCS}
	         )
  # link with the cisst libraries
  CISST_REQUIRES("multiTaskTutorialExample9Server" "cisstCommon;cisstOSAbstraction;cisstMultiTask")


  # CMake command, generate .cxx and .h from .fl files
  FLTK_WRAP_UI(multiTaskTutorialExample9Client clientUI.fl)

  # name the main executable and specifies with source files to use
  ADD_EXECUTABLE(multiTaskTutorialExample9Client
                 # code files to compile
                 fltkMutex.cpp
                 clientTask.cpp
                 clientMain.cpp
                 # header files are provided for information
                 fltkMutex.h
                 clientTask.h
                 # files generated by fluid
                 ${multiTaskTutorialExample9Client_FLTK_UI_SRCS}
                 )
  # link with the cisst libraries
  CISST_REQUIRES("multiTaskTutorialExample9Client" "cisstCommon;cisstOSAbstraction;cisstMultiTask")

else (CISST_MTS_HAS_ICE)
  message(WARNING " multiTaskTutorial example9 will be compiled as single process only, client/server version requires CISST_MTS_HAS_ICE")
endif (CISST_MTS_HAS_ICE)
