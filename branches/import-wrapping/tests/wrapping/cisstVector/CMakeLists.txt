#
# $Id: CMakeLists.txt,v 1.15 2008/02/05 16:02:49 anton Exp $
#

# (C) Copyright 2005-2007 Johns Hopkins University (JHU), All Rights
# Reserved.

# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# CMakeLists.txt for cisstNumerical wrapping tests

# Keep a list all tests for ctest/Dart
SET(DART_TEST_FILE ${CMAKE_CURRENT_BINARY_DIR}/DartTestfile-cisstVectorPython.txt)
SET(DART_TEST_FILE_AUTO ${CMAKE_CURRENT_BINARY_DIR}/DartTestfile-cisstVectorPython-auto.txt)
FILE(WRITE ${DART_TEST_FILE} "# File generated by CMake, do not modify\n")


# Wrap C++ class used to test the wrapping of fixed size vectors
# Swig requirements
FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

# Python libraries
IF(WIN32)
  LINK_LIBRARIES(debug ${PYTHON_DEBUG_LIBRARIES} optimized ${PYTHON_LIBRARIES}) 
ELSE(WIN32)
  LINK_LIBRARIES(${PYTHON_LIBRARIES}) 
ENDIF(WIN32)

# Threads for Python
FIND_PACKAGE(Threads REQUIRED)

# Allow generated c++ code to find header files
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CISST_SWIG_INCLUDE_DIR})

# We are using C++ code
SET(PROXY_TESTS vctFixedSizeVectorProxyTest vctFixedSizeMatrixProxyTest)
FOREACH(proxyTest ${PROXY_TESTS})
  SET(interface ${CMAKE_CURRENT_SOURCE_DIR}/${proxyTest}.i)
  SET(module ${proxyTest}Python)

  SET_SOURCE_FILES_PROPERTIES(${interface} PROPERTIES CPLUSPLUS ON)
  SET_SOURCE_FILES_PROPERTIES(${interface}
                            PROPERTIES SWIG_FLAGS "-v;-modern;-fcompact;-fvirtual")
  SWIG_ADD_MODULE(${module} python ${interface})
  IF(WIN32)
    SWIG_LINK_LIBRARIES(${module}
                        cisstVector cisstCommon
                        debug ${PYTHON_DEBUG_LIBRARIES}
                        optimized ${PYTHON_LIBRARIES})
  ELSE(WIN32)
    SWIG_LINK_LIBRARIES(${module} cisstVector cisstCommon ${PYTHON_LIBRARIES})
  ENDIF(WIN32)
  # Copy the .py file generated to wherever the libraries are
  ADD_CUSTOM_COMMAND(TARGET _${module}
                     POST_BUILD
                     COMMAND ${CMAKE_COMMAND}
                     ARGS -E copy
                             ${CMAKE_CURRENT_BINARY_DIR}/${module}.py
                             ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/${module}.py)
  # Create a cisstCommon.py as CMake assumes one should be created
  # This is a bug that should be fixed in future releases of CMake.
  ADD_CUSTOM_COMMAND(TARGET _${module}
                     POST_BUILD
                     COMMAND ${CMAKE_COMMAND}
                     ARGS -E copy
                             ${CMAKE_CURRENT_BINARY_DIR}/${module}.py
                             ${CMAKE_CURRENT_BINARY_DIR}/${proxyTest}.py)
ENDFOREACH(proxyTest)


# Create the scripts from .in
SET(LIB cisstVector)
IF(CMAKE_CONFIGURATION_TYPES)
  FOREACH(config ${CMAKE_CONFIGURATION_TYPES})
    CONFIGURE_FILE(${cisstWrappingTests_SOURCE_DIR}/cisstTestMain.py.in
                   ${EXECUTABLE_OUTPUT_PATH}/${config}/cisstVectorTests.py
                   IMMEDIATE @ONLY@)
  ENDFOREACH(config)
ELSE(CMAKE_CONFIGURATION_TYPES)
  CONFIGURE_FILE(${cisstWrappingTests_SOURCE_DIR}/cisstTestMain.py.in
                 ${EXECUTABLE_OUTPUT_PATH}/cisstVectorTests.py
                 IMMEDIATE @ONLY@)
ENDIF(CMAKE_CONFIGURATION_TYPES)

      
# Run the script to generate the list of tests automatically
ADD_CUSTOM_TARGET(cisstVector_CREATE_PYTHON_TESTS_LIST ALL
                  ${PYTHON_EXECUTABLE} ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/cisstVectorTests.py
                  -d ${PYTHON_EXECUTABLE} > ${DART_TEST_FILE_AUTO})

ADD_DEPENDENCIES(cisstVector_CREATE_PYTHON_TESTS_LIST
                 cisstCommon
                 cisstVector
                 _cisstCommonPython
                 _cisstVectorPython
                 _vctFixedSizeVectorProxyTestPython
                 _vctFixedSizeMatrixProxyTestPython)

FILE(APPEND ${DART_TEST_FILE} "INCLUDE(\"${DART_TEST_FILE_AUTO}\")\n")


# Add all the test lists
SET_DIRECTORY_PROPERTIES(PROPERTIES TEST_INCLUDE_FILE
                         ${DART_TEST_FILE})
                         


#
# $Log: CMakeLists.txt,v $
# Revision 1.15  2008/02/05 16:02:49  anton
# tests for cisstVector wrappers: Added extra copy of python generated file in
# build tree to avoid wrappers re-generation at each compile (CMake bug).
#
# Revision 1.14  2007/04/26 20:12:05  anton
# All files in tests: Applied new license text, separate copyright and
# updated dates, added standard header where missing.
#
# Revision 1.13  2006/11/20 20:33:53  anton
# Licensing: Applied new license to tests.
#
# Revision 1.12  2006/05/13 19:33:01  anton
# CMake configuration: Preliminary support for directory names with spaces.
# See ticket #226
#
# Revision 1.11  2006/05/02 19:28:04  anton
# Build tools: Major update in output directories.  Libraries and executables
# are now organized within "libs", "examples" and "tests" directories.  Paths
# can be set using the cisstvars scripts generated during the configuration
# (i.e. by CMake).  See ticket #215.
#
# Revision 1.10  2006/03/10 14:34:37  anton
# Misc CMakeLists.txt:  New flags for SWIG to reduce size of code and avoid
# Visual C++ warnings.
#
# Revision 1.9  2005/12/07 23:11:48  anton
# Python tests: Use python executable to start tests (see #198).
#
# Revision 1.8  2005/09/24 00:09:30  anton
# wrapping: All cisstVector modules require to link with/load cisstCommon.
# This was not the case so far because cisstVector was only relying on inline
# features of cisstCommon.
#
# Revision 1.7  2005/09/14 15:44:33  anton
# CMakeLists.txt for wrapping tests: Added dependencies on SWIG projects.
#
# Revision 1.6  2005/09/06 02:08:15  anton
# CMake configuration: Created a main CMakeLists.txt for the libs, tests and
# examples.  A lot of code has been "factorized" in the ./CMakeLists.txt.
# Known problems: "doc" is not working yet. Dependencies on SWIG projects don't
# work for parallel builds. If a lib is selected and then unselected, the tests
# still appear ...
#
# Revision 1.5  2005/07/19 17:11:17  anton
# vctFixedSizeMatrix: Added test for SWIG/Python support.
#
# Revision 1.4  2005/07/14 20:55:09  anton
# wrapping tests: Added code to define PYTHON_EXECUTABLE and use it for
# CTest.  This is required for Windows and should be safer for Unix.
#
# Revision 1.3  2005/07/14 04:00:56  anton
# cisst wrapping tests: Added code to handle release/debug configurations
# with MSVC.
#
# Revision 1.2  2005/06/24 01:48:11  anton
# cisstVector wrapping tests: Added link to python libraries for the SWIG
# wrapped code (required with Darwin).
#
# Revision 1.1  2005/06/23 15:19:04  anton
# cisstVector wrapping tests: Added the possibility to wrap some C++ classes
# used for further Python testing.  This is useful to test the typemaps which
# convert fixed size vectors back and forth to dynamic vectors.
#
#
