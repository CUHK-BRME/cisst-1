#
# $Id: CMakeLists.txt,v 1.3 2008/05/30 19:45:18 anton Exp $
#
# (C) Copyright 2005-2008 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---

# name of project and executable
PROJECT(multiTaskTutorialExample4)

# use CMake provided script to locate FLTK
FIND_PACKAGE(FLTK REQUIRED)

# add include paths
INCLUDE_DIRECTORIES(${multiTaskTutorialExample4_SOURCE_DIR}
                    ${FLTK_INCLUDE_DIR})

# magic CMake command, generate .cxx and .h from .fl files
# then compile them and link them with the executable
FLTK_WRAP_UI(multiTaskTutorialExample4 displayUI.fl)

# name the main executable and specifies with source files to use
ADD_EXECUTABLE(multiTaskTutorialExample4
               # code files to compile
               sineTask.cpp
               clockDevice.cpp
               displayTask.cpp
               main.cpp
               # header files are provided for information
               sineTask.h
               clockDevice.h
               displayTask.h
               # files generated by fluid
	       ${multiTaskTutorialExample4_FLTK_UI_SRCS}
	       displayUIstatic.cpp
	       )

# this program 
TARGET_LINK_LIBRARIES(multiTaskTutorialExample4 ${FLTK_LIBRARIES})

# link with the cisst libraries
CISST_REQUIRES("multiTaskTutorialExample4" "cisstCommon;cisstOSAbstraction;cisstMultiTask;cisstInteractive")

IF(CISST_HAS_LINUX_RTAI)
  TARGET_LINK_LIBRARIES(multiTaskTutorialExample4 ${RTAI_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
ENDIF(CISST_HAS_LINUX_RTAI)

IF(UNIX)
  IF(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    TARGET_LINK_LIBRARIES(multiTaskTutorialExample4 util)
  ENDIF(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
ENDIF(UNIX)

# copy the python script used in the example to the build tree
ADD_CUSTOM_COMMAND(TARGET multiTaskTutorialExample4
                   POST_BUILD
                   COMMAND ${CMAKE_COMMAND}
                   ARGS -E copy
                           ${multiTaskTutorialExample4_SOURCE_DIR}/example4.py
                           ${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/example4.py)


# For apple applications with GUI
IF(APPLE)
  FIND_PROGRAM(APPLE_REZ Rez /Developer/Tools)
  ADD_CUSTOM_COMMAND(TARGET multiTaskTutorialExample4
                     POST_BUILD
                     COMMAND ${APPLE_REZ}
                     ARGS ${FLTK_INCLUDE_DIR}/FL/mac.r Carbon.r -o ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/multiTaskTutorialExample4)
ENDIF(APPLE)
