#
# $Id: cisstBuild.cmake.in 8 2009-01-04 21:13:48Z adeguet1 $
#
# Cmake configuration file for the installed version of cisst
#
# Author(s):  Anton Deguet
# Created on: 2003-07-31
#
# (C) Copyright 2003-2007 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
# 
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
# 
# --- end cisst license ---


# Paths
SET(cisst_SOURCE_DIR "@cisst_SOURCE_DIR@")
SET(CISST_INCLUDE_DIR "@CISST_BUILD_INCLUDE_DIRECTORIES@")
SET(CISST_DOXYGEN_DIR "@CISST_BUILD_DOXYGEN_DIRECTORY@")
SET(CISST_LIBRARY_DIR "@CISST_BUILD_LINK_DIRECTORIES@")
SET(CISST_CMAKE_DIR "@cisst_SOURCE_DIR@/libs/cmake")
SET(CISST_SWIG_INCLUDE_DIR "@CISST_SWIG_INCLUDE_DIR@")


# Which libraries have been compiled
SET(CISST_LIBRARIES @CISST_LIBRARIES@)
SET(CISST_BUILD_SHARED_LIBS @CISST_BUILD_SHARED_LIBS@)


# Which flags have been set and include path/libs
SET(CISST_HAS_CNETLIB @CISST_HAS_CNETLIB@)
SET(CNETLIB_INCLUDE_DIR "@CNETLIB_INCLUDE_DIR@")
SET(CNETLIB_LIBRARIES @CNETLIB_LIBRARIES@)

SET(CISST_HAS_CISSTNETLIB @CISST_HAS_CISSTNETLIB@)
SET(CISSTNETLIB_INCLUDE_DIR "@CISSTNETLIB_INCLUDE_DIR@")
SET(CISSTNETLIB_LIBRARIES @CISST_BUILD_CISSTNETLIB_LIBRARIES@)

SET(CISST_HAS_LINUX_RTAI @CISST_HAS_LINUX_RTAI@)
SET(RTAI_INCLUDE_DIR "@RTAI_INCLUDE_DIR@")
SET(RTAI_LIBRARIES @RTAI_LIBRARIES@)

SET(CISST_HAS_SWIG_PYTHON @CISST_HAS_SWIG_PYTHON@)
SET(PYTHON_INCLUDE_PATH "@PYTHON_INCLUDE_PATH@")
SET(PYTHON_LIBRARIES "@PYTHON_LIBRARY@")
SET(PYTHON_DEBUG_LIBRARIES "@PYTHON_DEBUG_LIBRARY@")


# Import cisst CMake macros
INCLUDE(${CISST_CMAKE_DIR}/cisstMacros.cmake)


# Where to install
SET(CISST_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@")


# Paths to XML libraries defined in the cisstCommon project, and 
# exported in the build.
#
# This is a temporary fix to simplify building the libraries until
# an XML policy is decided on.
SET(USE_cmnXMLPath @USE_cmnXMLPath@)
IF(USE_cmnXMLPath)
    IF (CISST_HAS_XERCES_XALAN)
      SET(XERCES_HEADER_ROOT "@XERCES_HEADER_ROOT@")
      SET(XERCES_LIB_ROOT "@XERCES_LIB_ROOT@")
      SET(XERCES_LIBRARY @XERCES_LIBRARY@)
  
      SET(XALAN_HEADER_ROOT "@XALAN_HEADER_ROOT@")
      SET(XALAN_LIB_ROOT "@XALAN_LIB_ROOT@")
      SET(XALAN_LIBRARY @XALAN_LIBRARY@)
  
      INCLUDE_DIRECTORIES(${XERCES_HEADER_ROOT} ${XALAN_HEADER_ROOT})
      LINK_DIRECTORIES(${XERCES_LIB_ROOT}/${CMAKE_CFG_INTDIR} ${XALAN_LIB_ROOT}/${CMAKE_CFG_INTDIR})
      IF(WIN32)
        LINK_LIBRARIES(
            optimized ${XERCES_LIBRARY} optimized ${XALAN_LIBRARY}
            debug  "${XERCES_LIBRARY}D" debug "${XALAN_LIBRARY}D"
      )
      ELSE(WIN32)
        LINK_LIBRARIES(
            ${XERCES_LIBRARY} ${XALAN_LIBRARY}
        )
      ENDIF(WIN32)
  ELSE(CISST_HAS_XERCES_XALAN)
      SET(LIBXML2_HEADER_ROOT "@LIBXML2_HEADER_ROOT@")
      SET(LIBXML2_LIB_ROOT "@LIBXML2_LIB_ROOT@")
      SET(LIBXML2_LIBRARY @LIBXML2_LIBRARY@)
      INCLUDE_DIRECTORIES(${LIBXML2_HEADER_ROOT}/libxml2 ${LIBXML2_HEADER_ROOT})
      LINK_DIRECTORIES(${LIBXML2_LIB_ROOT})
      
      IF(WIN32)
        LINK_LIBRARIES(
            optimized ${LIBXML2_LIBRARY}
            debug  "${LIBXML2_LIBRARY}"
        )
      ELSE(WIN32)
       LINK_LIBRARIES(${LIBXML2_LIBRARY})
      ENDIF(WIN32)
  ENDIF(CISST_HAS_XERCES_XALAN)

ENDIF(USE_cmnXMLPath)
# End of XML paths section

